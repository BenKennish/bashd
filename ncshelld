#!/bin/bash

# A 'daemon' running a shell using nc (netcat)
# We run bash as a shell and in interactive mode
# and execute every command we receive
#
# Ben Kennish <ben@kennish.net>
# Nov 2014
#
# TODO: stop commands being echoed before they run

## no authentication; drop straight to bash
#DAEMON="/bin/bash --login -i -s"
# -OR-
# use ncshelld-auth
DAEMON="$(dirname $0)/ncshelld-auth"
#
# what TCP/IP port should we listen on?
PORT=2323
# how do we run netcat (e.g. 'nc', 'netcat', '/opt/nc/nc' etc)
NETCAT='nc'

# ----------------------------------------------------------------------------

# exit on errors
set -o errexit

CMD=$(basename $0)
PID_FILE="/var/run/$CMD.pid"

if [ -f $PID_FILE ]
then
    PID=$(cat $PID_FILE)

    if [ -d /proc/$PID ]
    then
        echo "Already running $CMD (PID $PID)" >&2
        exit 1
    else
        echo Removing stale PID file $PID_FILE
        rm -f $PID_FILE
    fi
fi

echo "Writing PID ($$) to $PID_FILE"
echo $$ > $PID_FILE

while true
do
   echo "Spawning '$DAEMON' to listen on TCP port $PORT..." 
   $NETCAT -ll -p $PORT -e $DAEMON
   # TODO: send STDOUT and STDERR to log files?
   
   # we should never reach here because "-ll" should keep the server up
   # but just in case we do, we restart
   echo "$NETCAT terminated!  Restarting in 5 seconds..." >&2
   sleep 5
done

